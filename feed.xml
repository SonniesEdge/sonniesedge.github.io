<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sonniesedge</title>
    <description>The personal site of sonniesedge. Human, web developer, ex-redhead. 
</description>
    <link>http://sonniesedge.co.uk/</link>
    <atom:link href="http://sonniesedge.co.uk/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 07 Jun 2017 13:38:02 +0200</pubDate>
    <lastBuildDate>Wed, 07 Jun 2017 13:38:02 +0200</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>A day without Javascript</title>
        <description>&lt;p&gt;As I write this it’s raining outside, and I’m trying to avoid having to go out into the murk and watch the Germans conduct their annual &lt;a href=&quot;http://www.karneval-berlin.de/en/&quot;&gt;diversity maneuvers&lt;/a&gt;. I’ve therefore decided to pass my time by doing the one thing that counts as a religious crime in web dev land: I’m going to turn off javascript in my browser and see what sites work and what sites don’t.&lt;/p&gt;

&lt;p&gt;I know, I know, my life is simply too exciting.&lt;/p&gt;

&lt;p&gt;Now, I know that because I write a lot about the universal web and progressive enhancement, people assume that I must hate javascript.&lt;/p&gt;

&lt;p&gt;This would be an incorrect assumption.&lt;/p&gt;

&lt;p&gt;I simply hate people relying on brittle client-side javascript when there are other alternatives. In the same way as I wouldn’t rely on some unknown minicab firm as the sole way of getting me to the airport for a wedding flight, I don’t like relying on a non-guaranteed technology as the sole way of delivering a web app.&lt;/p&gt;

&lt;p&gt;For me it’s a matter of elegance and simplicity over unnecessary complexity.&lt;/p&gt;

&lt;h2 id=&quot;too-many-tabs&quot;&gt;Too many tabs&lt;/h2&gt;
&lt;p&gt;So, for my dreary grey day experiment I restricted myself to just the things open in my browser tabs. For normal people this might be two or three sites.&lt;/p&gt;

&lt;p&gt;Not for me. I have approximately 17 shitmillion tabs open, because I Have a Problem With Tabs.&lt;/p&gt;

&lt;p&gt;No seriously. I can never just close a tab. I’ve tried things like &lt;a href=&quot;https://www.one-tab.com/&quot;&gt;One Tab&lt;/a&gt; but I just can’t get down to less than 30 in any one window (“I’ll just save that tab for later” I think, each and ever time). Let’s just agree that I need some kind of therapy, and we’ll all be able to move on.&lt;/p&gt;

&lt;p&gt;Anyway, there’s nothing fancy to this experiment. It was a case of turning off javascript in the browser and reloading a site, nothing more. To quickly disable the browser’s JS with one click I used Chrome and the &lt;a href=&quot;https://chrome.google.com/webstore/detail/toggle-javascript/cidlcjdalomndpeagkjpnefhljffbnlo&quot;&gt;Toggle Javascript&lt;/a&gt; extension - available, ironically enough, via the javascript-only Chrome web store.&lt;/p&gt;

&lt;p&gt;Oh, and for you, sweet reader, I opened these tabs in new windows, so you don’t have to see the pain of 50 tabs open at once.&lt;/p&gt;

&lt;h2 id=&quot;first-impressions&quot;&gt;First impressions&lt;/h2&gt;

&lt;p&gt;So how was it? Well, with just a few minutes of sans-javascript life under my belt, my first impression was “Holy shit, things are &lt;em&gt;fast&lt;/em&gt; without javascript”. There’s no ads. There’s no video loading at random times. There’s no sudden interrupts by “DO YOU WANT TO FUCKING SUBSCRIBE?” modals.&lt;/p&gt;

&lt;p&gt;If this were the only manifestation of turning off javascript, I’d do this for the rest of time. However, a lot of things don’t work. Navigation is the most common failure mode. Hamburger menus fail to internally link to a nav section (come on, that’s an easy one kids). Forms die when javascript is taken away (point the form to an endpoint that accepts GET/POST queries ffs). Above the fold &lt;em&gt;images&lt;/em&gt; fail to load (you do know they’re streaming by default, yes?).&lt;/p&gt;

&lt;h2 id=&quot;the-sites&quot;&gt;The sites&lt;/h2&gt;

&lt;p&gt;Let’s get to it. I think I’ve got a pretty representative list of sites in my open tabs (perhaps due to the aforementioned Tab Problem). Howl at me on Twitter if you feel I missed anything particularly important.&lt;/p&gt;

&lt;h3 id=&quot;feedly&quot;&gt;Feedly&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/feedly.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My very first attempt at sans-JS and I get nothing but a blank white page. Fuck you feedly.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sighs, runs hands over face, shouts after Feedly&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Wait no, Feedly, I’m sorry. I didn’t mean that. It was the coffee talking. Can we talk this over? I like using you to keep up with blog posts.&lt;/p&gt;

&lt;p&gt;But why do you work like this, Feedly? Your devs &lt;em&gt;could&lt;/em&gt; offer the site in basic HTML and use advanced features such as, er, anchor links, to move to other articles. Then when JS is available, new content can be loaded via JS.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Relationship counselling.&lt;/p&gt;

&lt;h3 id=&quot;twitter&quot;&gt;Twitter&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/twitter.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Twitter shows the normal website (with full content) for a brief moment, then redirects to &lt;a href=&quot;https://mobile.twitter.com&quot;&gt;mobile.twitter.com&lt;/a&gt; (the old one, not the spanky new React one, of course). This is really frustrating, as the full site would still be great to load without javascript. It could use the same navigation method as the mobile site, where it sets a query parameter to the URL “?max_id=871333359884148737” that dictates with is the latest tweet in your timeline to show. Simple and elegant.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Could try harder.&lt;/p&gt;

&lt;h3 id=&quot;google-chrome&quot;&gt;Google Chrome&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/chrome_download.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Google Chrome download page just fails completely, with no notice, only a blank white page.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sigh&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; No Chrome for you, you dirty javascriptophobe!&lt;/p&gt;

&lt;h3 id=&quot;youtube&quot;&gt;Youtube&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/youtube.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Youtube really really wants to load. Really, reallllllly, wants to. But then it fucks things up at the last nanosecond and farts out, showing no video, no preview icons, and no comments (that last one is perhaps a positive).&lt;/p&gt;

&lt;p&gt;Even if the site is doing some funky blob loading of video media, it wouldn’t be hard to put a basic version on the page initially (with &lt;code class=&quot;highlighter-rouge&quot;&gt;preload=&quot;none&quot;&lt;/code&gt;), and then have it upgrade when JS kicks in.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Can’t watch My Drunk Kitchen or Superwoman. :( :( :(&lt;/p&gt;

&lt;h3 id=&quot;ways&quot;&gt;24 ways&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/24ways.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve had this open in my tabs for the last 6 months, meaning to read it. Look, I’M SORRY, okay? But holy fuck, this site works great without javascript. All the animations are there (because they’re CSS) and the slide in navigation works (because it internally links to the static version of the menu at the bottom of the page).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Class act. Smoooooth. Jazzz.&lt;/p&gt;

&lt;h3 id=&quot;netflix&quot;&gt;Netflix&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/netflix.png&quot; alt=&quot;&quot; /&gt;
I’m using netflix to try and indoctrinate my girlfriend into watching Star Trek. So far she’s not convinced, mainly because “Tasha &lt;em&gt;slept with Mr Data?&lt;/em&gt; But it’d be like fucking your microwave”.&lt;/p&gt;

&lt;p&gt;Anyway, Netflix doesn’t work. Well, it loads the header, if you want to count that. I get why they don’t do things with HTML5 - DRMing all yo shit needs javascript. But still :(.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; JavaScript-only is the New Black&lt;/p&gt;

&lt;h3 id=&quot;nytimes&quot;&gt;NYtimes&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/nytimes_with_js.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/nytimes_sans_js.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Not sure why this was in my tab list, but tbh I’ve found rotting tabs from 2015 in there, so I’m not surprised.&lt;/p&gt;

&lt;p&gt;The NY Times site loads in &lt;em&gt;561ms&lt;/em&gt; and 957kb without javascript. Holy crap, that’s what it should be like normally. For reference it took 12000ms (12seconds) and 4000kb (4mb) to load &lt;em&gt;with&lt;/em&gt; javascript. Oh, and as a bonus, you get a screenful of adverts.&lt;/p&gt;

&lt;p&gt;A lot of images are lazy loaded, and so don’t work, getting replaced with funky loading icons. But hey ho, I can still read the stories.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Failing… to &lt;em&gt;not&lt;/em&gt; work. Sad!&lt;/p&gt;

&lt;h3 id=&quot;bbc-news&quot;&gt;BBC News&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/bbc_news.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s the day after the latest London terrorism attacks, and so I’ve got this open, just to see how the media intensifies and aids every terrorist action. The BBC is the inventor and poster-child for progressive enhancement via Cutting the Mustard, and it doesn’t disappoint. The non-CTM site works fully and while it doesn’t &lt;em&gt;look&lt;/em&gt; the same as the full desktop site (it’s mobile-first and so is pretty much the mobile version), it still &lt;em&gt;works&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Colman’s Mustard&lt;/p&gt;

&lt;h3 id=&quot;google-search&quot;&gt;Google search&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/google.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Without JS, Google search still does what it’s best at: searching.&lt;/p&gt;

&lt;p&gt;Okay, there’s no autocomplete, the layout reverts to the early 2000s again, and image search is shockingly bad looking. But, in the best progressive enhancement manner, you can still perform your core tasks.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Solid.&lt;/p&gt;

&lt;h3 id=&quot;wikipedia&quot;&gt;Wikipedia&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/wikipedia.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Like a good friend, Wikipedia never disappoints. The site is indistinguishable from the JS version. Keep being beautiful, Wikipedia.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; BFFs.&lt;/p&gt;

&lt;h3 id=&quot;amazon&quot;&gt;Amazon&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/amazon.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The site looks a little… &lt;em&gt;off&lt;/em&gt; without JS (the myriad accordions vomit their content over the page when JS isn’t there to keep them under control). But the entire site works! You can still search, you still get recommendations. You can still add items to your basket, and you can still proceed to the checkout.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Amazonian warrior.&lt;/p&gt;

&lt;h3 id=&quot;google-maps&quot;&gt;Google Maps&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/a-day-without-javascript/google_maps.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Discounting Gmail, Google Maps is perhaps one of the most heavily used Single Page Applications out there. As such I expected some kind of fallback, like Gmail provides, even if it wasn’t true progressive enhancement. Maybe some kind of Streetmap style tile-by-tile navigation fallback?&lt;/p&gt;

&lt;p&gt;But it failed completely.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Verdict:&lt;/em&gt; Cartography catastrophe.&lt;/p&gt;

&lt;h2 id=&quot;overall-verdict&quot;&gt;Overall verdict&lt;/h2&gt;

&lt;p&gt;This has made me appreciate the number of large sites that make the effort to build robust sites that work for everybody. But even on those sites that are progressively enhanced, it’s a sad indictment of things that they can be so slow on the multi-core hyperpowerful Mac that I use every day, but immediately become fast when JavaScript is disabled.&lt;/p&gt;

&lt;p&gt;It’s even sadder when using a typical site and you realise how much Javascript it downloads. I now know why my 1GB mobile data allowance keeps burning out at least…&lt;/p&gt;

&lt;p&gt;I maintain that it’s perfectly possible to use the web without javascript, especially on those sites that are considerate to the diversity of devices and users out there. And if I want to browse the web without javascript, well fuck, that’s my choice as a user. This is the web, not the Javascript App Store, and we should be making sure that things work on even the most basic device.&lt;/p&gt;

&lt;p&gt;I think I’m going to be turning off javascript more, just on principle.&lt;/p&gt;

&lt;p&gt;Haters, please tweet at me as you feel fit.&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Jun 2017 14:00:00 +0200</pubDate>
        <link>http://sonniesedge.co.uk/blog/a-day-without-javascript</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/a-day-without-javascript</guid>
        
        
      </item>
    
      <item>
        <title>Speaking at Frontend United 2017</title>
        <description>&lt;p&gt;I got back last week from Athens, where I was privileged enough to be able to give a talk at Frontend United 2017.&lt;/p&gt;

&lt;p&gt;Despite attending many conferences over the years, this was, in truth, my first time speaking in front of a conference audience. Oh, I’d spoken at meet-ups before, and even compered at large events, but speaking at a conference that people had &lt;em&gt;paid actual money&lt;/em&gt; to attend and hear me say things… fuck, I’d never done that. I’m used to hanging around in the crowd, and watching others do their thing on stage, rather than standing in front of everyone and talking.&lt;/p&gt;

&lt;p&gt;It’s good news however, as the talk went extremely well. None of my anxiety dreams were realised. I didn’t fling the microphone across the room while speaking (as was one fear), nor did I stumble to a halt and forget what I had to say (as was another). I definitely didn’t pass out and wake to find myself naked on stage (a third, if perhaps unlikely, anxiety).&lt;/p&gt;

&lt;h2 id=&quot;the-talk-itself&quot;&gt;The talk itself&lt;/h2&gt;

&lt;p&gt;After receiving the acceptance email from FEU, I was in a panic, as I &lt;em&gt;hadn’t actually written&lt;/em&gt; the talk that I was proposing.  But luckily the wonderful &lt;a href=&quot;http://up.front.ug/&quot;&gt;Up.Front&lt;/a&gt; Berlin meetup was still looking for speakers for their next event, in just a few days. I spent 48 hours hastily banging out a sketchy talk.&lt;/p&gt;

&lt;p&gt;I chose a previous popular blog post, &lt;a href=&quot;/blog/progressive-enhancement&quot;&gt;Yes, Progressive enhancement is a Fucking Moral Argument&lt;/a&gt;, as the basic for the talk. And by popular, it got the most number of men telling me I was wrong.&lt;/p&gt;

&lt;p&gt;TBH, the talk at Up.Front was a bit pants, being a mish mash of various SJW concepts. But the talk let me see what worked and what didn’t (for example, the entire audience kept avoiding my gaze as I harangued them and didn’t give them even sliver of humour).&lt;/p&gt;

&lt;p&gt;I spent the next month refining it into something that worked. All my love to my patient partner who had to put up with me hiding in cafes and working on it at silly hours. I really need to get better at time boxing this kind of stuff.&lt;/p&gt;

&lt;h2 id=&quot;frontend-united&quot;&gt;Frontend United&lt;/h2&gt;

&lt;p&gt;FEU itself was an incredibly lovely event, put on by volunteers who obviously had a lot of love for their trade and their community. My wholehearted thanks to the extremely hardworking organisers of the event for giving me this opportunity, and for being such wonderfully lovely hosts.&lt;/p&gt;

&lt;p&gt;I got to meet a lot of people there who I’ve only ever seen online before, and it was an absolute pleasure to meet them all in the flesh. It was also good to hear a lot of seasoned conference talkers tell of how difficult it was their first few times speaking, and about how much easier it gets.&lt;/p&gt;

&lt;h2 id=&quot;the-future&quot;&gt;The future&lt;/h2&gt;

&lt;p&gt;Fuck it, given the feedback I think I did great, so I’m going to carry on speaking. So if you want someone who can come swear at your audience and talk vaguely about tech, I’m your gal.&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Jun 2017 14:00:00 +0200</pubDate>
        <link>http://sonniesedge.co.uk/blog/conference-speaking</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/conference-speaking</guid>
        
        
      </item>
    
      <item>
        <title>User Queries: Returning control to the user</title>
        <description>&lt;p&gt;As I write this I’m trying to use my fancy iPad in a cafe. The cafe doesn’t have wifi (because this is German) and I’m being forced to tether to my phones 3G connection (which is piss-poor because the 0.5 meter of Berlin concrete creates quite the radio dead zone).&lt;/p&gt;

&lt;p&gt;I’m just trying to access one particular webpage. Just one. I only want to find out some information. Seriously, it’s just a recipe for a cinnamon roll that I’d heard about.&lt;/p&gt;

&lt;p&gt;The site I’m accessing is being good, for once. It’s using the srcset attribute to send me images that are appropriate for my display (My editor made me look all this up afterwards). Unfortunately, what the browser has determined as appropriate for my display are quite high resolution 2x Retina images. They’re coming down over the crappy 3G connection at KBs a second. I doubt I’ll ever see them.&lt;/p&gt;

&lt;p&gt;I’m also waiting for the fonts to download. Here the designer hasn’t been as thoughtful and I’m facing a FoIT (Flash of Invisible Text) as I wait for the webfonts to download (Safari 9 helpfully displays no fonts while it waits for a webfont to download). On top of this the site is loading lots of the normal javascript shitefest of modern webbery (social media share buttons, adverts, and probably most of a custom React library, just so a class name can be toggled somewhere)&lt;/p&gt;

&lt;p&gt;Wouldn’t it be wonderful to be able to &lt;em&gt;tell&lt;/em&gt; a site “hey, it’s okay, I don’t want any fancy stuff, just send me what I need”? Wouldn’t that be &lt;em&gt;lovely&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Well, by one of those amazing coincidences that severely tempts me to buy a lottery ticket, something quite close to this appeared in the &lt;a href=&quot;https://developer.apple.com/library/prerelease/content/releasenotes/General/WhatsNewInSafari/Articles/Safari_10_1.html&quot;&gt;Safari 10.1 Beta&lt;/a&gt; a few hours after starting to write this post. The Reduced Motion Media Query exposes the Reduced Motion operating system setting as a browser media query. (Reduced Motion prevents effects like background parallax, which can be very distracting or even distressing for some users).&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prefers-reduced-motion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Disable the non-essential animations.
&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;.background&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

     &lt;span class=&quot;nl&quot;&gt;animation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now, that isn’t quite what I moaned about earlier. But it’s pretty damn amazing. A user can now specify that they don’t want to see CSS animations and, if a site honours it, they will now be disabled. There has never been a way for a user to do this before, apart from installing a third-party plugin and completely disabling CSS and JS [1], so to me this is HUGE. A site can honour a users browser &lt;em&gt;preferences&lt;/em&gt;, not just what the browser doggedly reports.&lt;/p&gt;

&lt;h2 id=&quot;i-have-the-power&quot;&gt;I have the power!&lt;/h2&gt;
&lt;p&gt;Could variants on Safari’s new system - a new breed of User Queries - solve my Moaning Myrtle problems?&lt;/p&gt;

&lt;p&gt;Mostly, but not totally. Some things would be pretty easy to expose as User Queries. They would be simple, binary choices - the kind of thing that’s in a typical OS or app. So a user might be able to declare that they want:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Reduced animation&lt;/li&gt;
  &lt;li&gt;Night mode&lt;/li&gt;
  &lt;li&gt;High/Low contrast&lt;/li&gt;
  &lt;li&gt;Larger controls&lt;/li&gt;
  &lt;li&gt;No custom fonts&lt;/li&gt;
  &lt;li&gt;A generic “low-bandwidth” setting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and a good site designer could chose to honour these wishes. Via CSS, buttons would be bigger, contrast would be improved and only system fonts would be displayed. Hurrah!&lt;/p&gt;

&lt;p&gt;I initially got very excited by the possibilities of a low-bandwidth setting, as whole “unnecessary” chunks of a site could be assigned a HTML class and then hidden in low-bandwidth scenarios.&lt;/p&gt;

&lt;div class=&quot;language-scss highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;@media&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;low-bandwidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;.non-essential&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;But in reality, what would this achieve? We couldn’t hide high-bandwidth images or videos in this way, as they’re loaded independently of CSS, even if set to &lt;code class=&quot;highlighter-rouge&quot;&gt;display: none&lt;/code&gt;. And hiding anything else behind a low-bandwidth MQ wouldn’t achieve much.&lt;/p&gt;

&lt;p&gt;No, user settings would have to go deeper. Perhaps being exposed in the JS layer. It would be possible to load those non-essential site components via JS, with a simple check in place to see if the site is operating in a high-bandwidth mode and, if so, loading the content.&lt;/p&gt;

&lt;p&gt;But there’s some things that might not fit into this world nicely. Images are my immediate concern. If a there was a user-declared setting of “low-bandwidth” then what would happen to ordinary images? These couldn’t be handled as a media query, nor loaded via Javascript, so the browser would have to step in and make a decision. Would no images be loaded? (Hey, remember when you used to be able to disable images in the browser?) Or would the browser try to grab the lowest value in a &lt;code class=&quot;highlighter-rouge&quot;&gt;srcret&lt;/code&gt; array? How would things like animated GIFs conform to a no-animate user setting? This is something to think about.&lt;/p&gt;

&lt;h2 id=&quot;original-thinking&quot;&gt;Original thinking&lt;/h2&gt;

&lt;p&gt;I thought I was being pretty original writing about this, but it turns out &lt;a href=&quot;https://twitter.com/decadecity&quot;&gt;@decadecity&lt;/a&gt; already &lt;a href=&quot;https://decadecity.net/blog/2015/06/28/user-queries&quot;&gt;wrote about&lt;/a&gt; this exact idea in 2015, outlining some potential scenarios that something like this could allow, and even successfully predicting the Reduced Motion MQ!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;With user queries there would be a number of settings available in the user agent. Presented via a settings UI these would allow users to set certain preferences that were then made available in the runtime in the way media queries provide information about the user agent.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They really expand on this concept, going as far as outlining dark patterns that could emerge from this (low-bandwidth ppl being targeted for better broadband advertising is an awful, but totally realistic, concern!)&lt;/p&gt;

&lt;h2 id=&quot;beyond-mq&quot;&gt;Beyond MQ&lt;/h2&gt;
&lt;p&gt;Incidentally, some browser-honoured user-settings already exist, apart from Safari’s new MQ. You might not think it, but font sizing is already completely a user-setting. You can bump your browser font size up and down, and a good site will respond to that, via EMs and REMs.&lt;/p&gt;

&lt;p&gt;Languages are a user setting, that are accessible in the browser via CSS. (&lt;code class=&quot;highlighter-rouge&quot;&gt;:lang()&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;There’s probably others that I’ve not thought of. Let me know if you think of any!&lt;/p&gt;

&lt;h2 id=&quot;full-circle---user-stylesheets&quot;&gt;[1] Full circle - user stylesheets&lt;/h2&gt;

&lt;p&gt;Oh, I said there wasn’t a way for a user to impose their own settings on a site - well actually, I lie. There used to be ways to do to this. It was called User Stylesheets. user Stylesheets were meant to be the last stop of the CSS cascade: user rules that would override anything that a site had set.&lt;/p&gt;

&lt;p&gt;These were incredibly useful. When I was a tech assistant at Further Education colleges I used to help students and teachers to set up their browsers with custom styles. Students with dyslexia used to want Comic Sans everywhere, while staff with poor eyesight wanted to reduce the contrast between text and background colours.&lt;/p&gt;

&lt;p&gt;Sadly Google chose to &lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=318566&quot;&gt;remove&lt;/a&gt; the ability for users to specify a custom stylesheet from Chrome. Similar functionality is offered via extensions, but it’s no longer a first-class citizen of the browser. I know it probably costs a few hundred KBs of code to implement, but come on, that was essential stuff for so many users.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;User Queries, if done right, would be fucking &lt;em&gt;sick&lt;/em&gt;. They’re a perfect Progressive Enhancement tool and if you care about the user, they’re right up your alley.&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Jan 2017 13:00:00 +0100</pubDate>
        <link>http://sonniesedge.co.uk/blog/user-queries</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/user-queries</guid>
        
        
        <category>css</category>
        
      </item>
    
      <item>
        <title>Staffordshire Oatcake Recipe</title>
        <description>&lt;p&gt;Staffordshire oatcakes are only to be found in my home region of The Potteries. They are the fucking &lt;em&gt;business&lt;/em&gt;. You stuff them with cheese and mushrooms and then stuff them in your mouth.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://pbs.twimg.com/media/C117DXRW8AA-cbr.jpg&quot; alt=&quot;Oatcakes!&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;ingredients&quot;&gt;Ingredients&lt;/h2&gt;

&lt;p&gt;With bad German translations because these are oatcakes born and given form in Germany.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;225g fine cut oats / hafer flocken (extra zart)&lt;/li&gt;
  &lt;li&gt;100g wholewheat flour / weizen vollkorn mehl&lt;/li&gt;
  &lt;li&gt;125g bread flour / weizenmehl type 550&lt;/li&gt;
  &lt;li&gt;1tsp salt / salz&lt;/li&gt;
  &lt;li&gt;2 packets instant yeast / backhefe (about 14g total)&lt;/li&gt;
  &lt;li&gt;500ml warm milk / milch&lt;/li&gt;
  &lt;li&gt;500ml warm water / wasser&lt;/li&gt;
  &lt;li&gt;1tbsp sugar / zuker&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;method&quot;&gt;Method&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Mix the oat, bread flour, wholewheat flour and salt in a bowl.&lt;/li&gt;
  &lt;li&gt;Mix warm milk and warm water (hot water and room temp milk works just as well)&lt;/li&gt;
  &lt;li&gt;Add yeast and sugar to a side bowl and use some of the liquid to make a yeasty soup. Wait for the soup to froth.&lt;/li&gt;
  &lt;li&gt;Add the yeasty soup to the dry mixture and then add the rest of the liquid, forming a lovely batter.&lt;/li&gt;
  &lt;li&gt;Cover the bowl and leave the batter in a warm place (an oven that has been briefly heated is perfect) for one hour.&lt;/li&gt;
  &lt;li&gt;Once the batter is frothy, heat a heavy pan to a high temperature and grease it slightly with butter or oil (not too much - you don’t want to fry the oatcakes)&lt;/li&gt;
  &lt;li&gt;Use a ladle to scoop out 3/4 of a ladle of batter and pour it into the pan. Swirl the batter around the pan so the mixture coats the bottom.&lt;/li&gt;
  &lt;li&gt;There should be holes in the batter - this is a good thing.&lt;/li&gt;
  &lt;li&gt;Once the oatcake becomes solid and you can slip a griddle thing under it, flip it over and let the other side cook.&lt;/li&gt;
  &lt;li&gt;Slide it out onto a dish and do the same again. You should get about a dozen oatcakes out of the mixture.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Jan 2017 23:24:00 +0100</pubDate>
        <link>http://sonniesedge.co.uk/blog/oatcakes</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/oatcakes</guid>
        
        
        <category>food</category>
        
      </item>
    
      <item>
        <title>Some feedback from the Internet of Men</title>
        <description>&lt;p&gt;My &lt;a href=&quot;/blog/an-open-letter-to-that-always-hacking-guy&quot;&gt;last post&lt;/a&gt; made a lot of men quite annoyed. In a surprising move they felt the need to tell me about how annoyed they are. I know, right?&lt;/p&gt;

&lt;p&gt;These poor annoyed men fell into at least one of three camps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Insecure developers who felt I was belittling people who code in their spare time.&lt;/li&gt;
  &lt;li&gt;Mens Rights Activists who felt I was ignoring men who didn’t have the time to code.&lt;/li&gt;
  &lt;li&gt;Code Nazis who felt I was undermining the developer master race.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;insecure-developers&quot;&gt;Insecure Developers&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;“But, but, &lt;em&gt;I&lt;/em&gt; code in my spare time! I’m not a bad boy! I’m &lt;em&gt;not&lt;/em&gt;!”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sweetie, no one said you were bad for coding in your spare time. You’re very lucky that you’re able to do so - I’m jealous that you can!&lt;/p&gt;

&lt;p&gt;But when someone criticises the systematic problems that pile emotional, physical, and time labour upon those less privileged than the straight, white, male “default, they’re &lt;em&gt;not criticising you personally&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When someone criticises those systemic problems it is a good idea to think about why they are criticising them. Ask if the fact that you took the criticism personally means that you might benefit from (or be untouched by) those systemic problems. Then ask yourself how you can help to eliminate those systemic problems.&lt;/p&gt;

&lt;h2 id=&quot;what-about-men&quot;&gt;What about men!?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Men have problems too! You’re not addressing our problems! Where’s my cookie?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oh, honey. Yes, men have problems too. Quite apart from benefitting from the wage gap and having to perpetuate most violent crimes, you also have to deal with women speaking out. Those feminists are just awful, aren’t they?&lt;/p&gt;

&lt;p&gt;No, but srsly. If you’re a man and you have problems that do not enable you to code in your free time, then the previous article should not offend you. It speaks about you as well, because it speaks about all people who are less privileged. Just because your specific case was not mentioned does not mean your problem has been invalidated.&lt;/p&gt;

&lt;p&gt;I’m not able to list every intersectional oppression that involves everybody. There is not enough internet for that. That is why I gave &lt;em&gt;examples&lt;/em&gt;. Examples are “things that illustrate a general rule, without being a fucking list of literally everything possible”.&lt;/p&gt;

&lt;h2 id=&quot;code-nazis-i-hate-code-nazis&quot;&gt;Code Nazis. I hate Code Nazis&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The best runners run all the time. The best guitarists play all the time. It’s obvious that the best developers code all the time.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The best runners run all the time because they have to maintain a level of fitness, strength and stamina that they could not get by doing anything else.&lt;/p&gt;

&lt;p&gt;The best guitarists play all the time because their music bring pleasure to people, and because music playing is a huge part muscle-memory, something that must be reinforced.&lt;/p&gt;

&lt;p&gt;Neither of these these reasons apply to coding.&lt;/p&gt;

&lt;p&gt;Yes, you need to practice coding. Just like any other skill. But if you think the best coders are the ones who are always coding, always committing to Github, always disrupting, then you’re due for a horrible surprise in a year or two, when burnout hits you. Because it will. Slow down now, take off the VR headset, go smell the roses. There’s a whole world out there.&lt;/p&gt;

&lt;p&gt;The best developers that I know are well-rounded human beings. They do not code every second that they get. They interact with the world around them and use those interactions to inform their considered coding choices. They may not know then entire React API from memory, or be able to debug code by just reading it (they use Google and unit tests for that). But they will produce applications that consider the human being using it, write code that is easy to read and easy to use by other developers, and they will help elevate their fellow coders, hackers and developers up.&lt;/p&gt;

&lt;h3 id=&quot;terrifying&quot;&gt;Terrifying&lt;/h3&gt;

&lt;p&gt;Incidentally, there was one terrifying argument that I saw repeated by a couple of people, that “sacrifices must be made” to be good at what you do.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“It doesn’t matter the cards you were dealt. You have to make yourself the best. If you aren’t sacrificing, you aren’t achieving.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is genuinely terrifying. This is the ultimate buy-in to the neoliberal dream. You &lt;em&gt;shouldn’t have to sacrifice&lt;/em&gt;. Do you hear me on this? Please hear me on this. Nobody should be breaking themselves, their lives or their families, just to code.&lt;/p&gt;

&lt;h2 id=&quot;in-summary&quot;&gt;In summary&lt;/h2&gt;

&lt;p&gt;I’m going to have to summarise here, because some people have been missing the argument, badly, and need it in bullet points:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No one is saying that coding in your spare time is bad.&lt;/li&gt;
  &lt;li&gt;No one is saying that “only the privileged” can be the best in the field. There will always be exceptions in any group.&lt;/li&gt;
  &lt;li&gt;I &lt;em&gt;am&lt;/em&gt; saying that &lt;em&gt;groups&lt;/em&gt; of people with more time available to them will get to code more.&lt;/li&gt;
  &lt;li&gt;I &lt;em&gt;am&lt;/em&gt; saying that clueless CEOs will, consciously or unconsciously_ bias towards those groups that can spend more time coding.&lt;/li&gt;
  &lt;li&gt;Those groups biased &lt;em&gt;towards&lt;/em&gt; will be at an unfair advantage.&lt;/li&gt;
  &lt;li&gt;Those biased &lt;em&gt;against&lt;/em&gt; will get pushed further down the societal and employment pile.&lt;/li&gt;
  &lt;li&gt;Yes, this is a feminist issue (if you think feminism is about pushing women ahead of others, you need to read).&lt;/li&gt;
  &lt;li&gt;Yes, other groups than women are affected by this (if you think my piece was about women, you didn’t read it).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;shoutout-time&quot;&gt;Shoutout time&lt;/h2&gt;
&lt;p&gt;Oh, and a huge shoutout to the developers who didn’t take this personally, who understood the issues at hand, and signal-boosted the previous post. So many &amp;lt;3s for you.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Dec 2016 13:00:00 +0100</pubDate>
        <link>http://sonniesedge.co.uk/blog/always-hacking-feedback</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/always-hacking-feedback</guid>
        
        
        <category>sjw</category>
        
      </item>
    
      <item>
        <title>An open letter to the guy who wrote that 'Always Hacking' tweet</title>
        <description>&lt;p&gt;Joe, if you want an insight into why the web industry is so broken, just look at &lt;a href=&quot;https://twitter.com/joemccann/status/812732099027419139&quot;&gt;the tweet&lt;/a&gt; that you wrote on Christmas Eve:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The best software developers I know are always hacking over the holidays. True story.” - &lt;a href=&quot;https://twitter.com/joemccann&quot;&gt;Joe McCann&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Joe, people are angry at this tweet. Can you guess why? Perhaps it’s the implication by you, as a CEO, that anyone not working over the holidays is not good enough? (I &lt;em&gt;know&lt;/em&gt; you didn’t consciously mean it sweetheart_. Shhh, sshhhh, stop talking.). Is it the pushing of the broken narrative that coders “never stop coding”? Is it that the people likely to hacking over the holidays are those &lt;em&gt;privileged enough&lt;/em&gt; to be hacking over the holidays?&lt;/p&gt;

&lt;p&gt;Is it all of the above?&lt;/p&gt;

&lt;p&gt;Joe, if you’re a young single straight man developer - the cliche of tech workers -  then yes, you probably do have plenty of time to be hacking over the holidays. You don’t even question this notion. Going over to your folks and hanging out for a week is a &lt;em&gt;great&lt;/em&gt; opportunity to catch up on some projects, right?&lt;/p&gt;

&lt;p&gt;You know why it’s a great opportunity for the Always Hacking developer? Because someone else is going to be taking on the physical and emotional labour of the festive season for them. The Glorious Young Prodigal Programmer Son will be welcomed home and cooed over. He will be fussed and loved and told how pasty he’s looking. He will be asked “do you have a girlfriend yet?” 5000 times. He will be asked if he’s going to go on holiday anywhere nice. He will be told to eat more.&lt;/p&gt;

&lt;p&gt;Once all the fussing is done he’ll make a token gesture at helping out, because he’s seen enough TV and read enough comics to know that he should:&lt;/p&gt;

&lt;p&gt;“Mum, can I do anything at all?”&lt;/p&gt;

&lt;p&gt;“Oh no, son! Go sit down. It’s just nice to have you here”.&lt;/p&gt;

&lt;p&gt;[son looks around, sees nothing obvious to do, opens up laptop, starts coding on latest project]&lt;/p&gt;

&lt;p&gt;Now, I’m not saying all single young straight man developers are like this. #notallmen, etc. But I am saying that this is just one of the many scenarios where women, mothers, minorities are expected by society to make things appear like they “just happen”. Do you need an analogy, Joe? It’s like a duck, swimming serenely along on a lake. What you don’t see, Joe, is the legs furiously paddling. From above it all looks so easy. From beneath, it’s all hard work.&lt;/p&gt;

&lt;p&gt;Enough with the analogies. Let’s try a real scenario. Now, Joe, imagine the Frumpy Daughter Who Works With Computers For Some Reason coming home (Surprising, I know! There just aren’t that many women in tech, are there? I wonder why, for fucks sake?):&lt;/p&gt;

&lt;p&gt;She will be asked when is she getting married. “Why haven’t you had children yet? The clock is ticking!” She will be told to go make a cup of tea for her father and to help out with the cooking. “By the way can you go visit your Aunty Edna? I’d ask your brother, but he doesn’t like doing it.”&lt;/p&gt;

&lt;p&gt;The Frumpy Daughter Who Works With Computers For Some Reason will always offer to help out, just as the Glorious Prodigal Programmer Always Hacking Son might:&lt;/p&gt;

&lt;p&gt;“Can I help out, mum?”&lt;/p&gt;

&lt;p&gt;“You can go put the washing on. And prep the vegetables. And wrap some presents.”&lt;/p&gt;

&lt;p&gt;She will not be Always Hacking. Because she does not have the time.&lt;/p&gt;

&lt;p&gt;And that is only &lt;em&gt;one&lt;/em&gt; axis of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Kyriarchy&quot;&gt;kyriarchy&lt;/a&gt; pressing down. Seriously Joe, do some reading on this.&lt;/p&gt;

&lt;p&gt;Because do you think a programmer with a disability is happily hacking over the holidays? Or are they trying to make sure their basic needs are met, in a society that wants to hide and push down anybody who is not currently abled?&lt;/p&gt;

&lt;p&gt;Do you think the … Joe, &lt;em&gt;please&lt;/em&gt; stop looking at your tweets and just pay attention … do you think the single mother programmer, raising three kids, is always hacking? Or is she looking after her children and trying to make Christmas a happy time for them?&lt;/p&gt;

&lt;p&gt;Do you thing the LGBT programmer, desperately trying to make emotional bridges with a family who does not understand them, is always hacking? Or are they outside, avoiding their family as much as possible?&lt;/p&gt;

&lt;p&gt;Joe, the reason the “best developers” are “Always Hacking” is because they’re not caring for children, or looking after elderly relatives. They’re not helping out with the basic chores that just “magically happen” around them. They’re not fighting for their right to exist amongst a family and society that despises what they are.&lt;/p&gt;

&lt;p&gt;Let’s rewrite your tweet:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“The most privileged developers I know are most likely to be always hacking over the holidays. True story.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You, Joe, might think that all programmers are living in their gated community, with Soylent deliveries always pending, and their apartments always cleaned by a maid.&lt;/p&gt;

&lt;p&gt;You can fuck off with that view, because it so utterly, utterly wrong.&lt;/p&gt;

&lt;p&gt;Joe, the web industry is based upon code over people. We might occasionally fart inanities like “hacker culture” or “disrupting tech to make the world a better place”, but “better” doesn’t mean what a normal human being might think it to mean.&lt;/p&gt;

&lt;p&gt;“Better” to people like you, and others who espouse similar views, simply means &lt;em&gt;more technology&lt;/em&gt; and &lt;em&gt;more money&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Please, Joe, do not subscribe to this notion. Toss it aside. It will not make you a better person. Get your firm to make time for people. Encourage your programmers to help out with family chores. Get them to focus energy on those who are not as fortunate as them.&lt;/p&gt;

&lt;p&gt;Help them to help others, to make the world a better place. Because technology doesn’t make things better. People do.&lt;/p&gt;

&lt;p&gt;Happy holidays, Joe.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Dec 2016 13:00:00 +0100</pubDate>
        <link>http://sonniesedge.co.uk/blog/an-open-letter-to-that-always-hacking-guy</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/an-open-letter-to-that-always-hacking-guy</guid>
        
        
        <category>sjw</category>
        
      </item>
    
      <item>
        <title>Yes, progressive enhancement is a fucking moral argument</title>
        <description>&lt;p&gt;I rolled my eyes when I saw &lt;a href=&quot;https://web.archive.org/web/20161205174122/https://www.viget.com/articles/the-case-against-progressive-enhancements-flimsy-moral-foundation&quot;&gt;this post&lt;/a&gt; circulate around the webosphere. I knew it was clickbait, but I clicked it and read it, because what else is a whiney SJW feminist fuck meant to do while she’s drinking her coffee in the morning? But then, as I scanned the page, I realised what deeper level of fucked-up-ness it represents.&lt;/p&gt;

&lt;p&gt;But let me back up and explain this. First of all, the article by &lt;a href=&quot;http://twitter.com/joshkorr&quot;&gt;@joshkoor&lt;/a&gt; revolves around the central notion that bringing Progressive Enhancement (PE from now on) into our work is a burden on the modern web developer. You see, any site should be able to be rendered 100% in javascript, and that’s &lt;em&gt;okay&lt;/em&gt;. Because the modern user has javascript, and expecting javascript to not be available is just plain pig-headedness. Those whiny PE proponents are making a &lt;em&gt;moral&lt;/em&gt; case for PE, rather than taking a utilitarian and path-of-least-resistance approach.&lt;/p&gt;

&lt;p&gt;Fundamentally, the article is a shitty strawman argument against PE. It erroneously states that PE proponents want the latest canvas-based in-browser game to work with JS turned off. Which is bollocks, because the argument for PE is developing useful apps and sites that achieve core functionality for &lt;em&gt;everyone&lt;/em&gt;, no matter their browser, OS, hardware and user ableness, offering nice-to-haves as the abilities of those things increase. But no, the author has reduced it down to “PE hardliners want everything to work without JS”. (The tech world equivalent of the tabloids shouting “Muslim extremists want YOU to cover up YOUR DAUGHTER!”)&lt;/p&gt;

&lt;h2 id=&quot;let-the-pain-begin&quot;&gt;Let the pain begin&lt;/h2&gt;

&lt;p&gt;First of all, the title of the article:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Case Against Progressive Enhancement’s Flimsy Moral Foundation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This should more accurately read “The Case &lt;em&gt;For&lt;/em&gt; Progressive Enhancement Is Flimsy Because It Is A Moral Argument”.&lt;/p&gt;

&lt;p&gt;Let’s be clear about this upfront. The author is arguing against PE because it is based on morality trumping practicality. You’ll see why this is fucking problematic as we progress.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;…some PE advocates argue [that] JavaScript should still be used only as an enhancement, and that sites must work without JavaScript.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Firstly, for content-orientated site, yes I do absolutely fucking argue that.&lt;/p&gt;

&lt;p&gt;Secondly, for webapps, I also absolutely fucking argue that.&lt;/p&gt;

&lt;p&gt;Your startup’s webapp for getting Soylent delivered to your door so that you don’t have to go to the shops and take valuable time from coding with shopping and cooking and other menial, women-orientated, tasks ISN’T SPECIAL. It doesn’t get a free pass, saying “oh, PE is too hard for my delicate coding hands”.&lt;/p&gt;

&lt;p&gt;Even if, like the original author, you discount the moral argument for PE, then you are still left with the practical arguments. The main one of which is: the web is a hostile environment to your code. You do not control the users browser, OS, corporate policy or network speed/latency. You do not control their settings. You do not decide if their phone is old and shitty, or sparkly and new. Unlike all other coders in history, Frontend Developers (FEDs) have to code for a mind-bogglingly huge combination of OS, client app and hardware.&lt;/p&gt;

&lt;p&gt;Progressive Enhancement is about making sure that your code works on a device, no matter the configuration. What’s that? You’re only testing your code on the latest iPhone? You arrogant fuck. &lt;em&gt;Immediately&lt;/em&gt; go out there and start testing it on an old iPhone 4. Or an entry-level Android device. Because someone out there will be using your app on that and cursing you for making such a shitty site. They’ll be cursing you while they’re just trying to book their plane tickets, alone, in a country with limited data, but your site uses React and was only tested on the latest iPhone on office-speed wifi.&lt;/p&gt;

&lt;p&gt;Part of PE means checking to see how your code works on older devices. You should be feature detecting and Cutting the Mustard to offer the best experience, no matter the device. Part of that might mean, horror of fucking horrors, not using JS to accomplish a task. Does a user need React and the rest of a JS app stack when they’re not a byte of memory to spare?&lt;/p&gt;

&lt;p&gt;“Oh, but we’re not catering for those peop… less-advantaged users” you might cry, throwing your loose fingers in the air. HOW THE FUCK DO YOU KNOW THAT, SHIT FOR BRAINS? Your fancy limousine website might be aimed at the richest and most privileged, and fully tested on the latest version of Chrome on a bleeding-edge MacBook, but when your exec is forced to use a shitty hotel-lobby computer to access your site and suddenly it grinds to a halt because those computers are locked down by a contracting IT firm who didn’t want to take any chances with security? What the fuck are you going to tell them then? “oh sorry, I only tested in on a fancy computer”. Idiot.&lt;/p&gt;

&lt;h2 id=&quot;morality-is-hard-mom&quot;&gt;Morality is hard, mom&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;In this post, I want to fully unpack those ideas and make the case that:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Progressive enhancement is a philosophical, moral argument disguised as a practical approach to web development.&lt;/li&gt;
    &lt;li&gt;This makes it impossible to engage with at a practical level.&lt;/li&gt;
    &lt;li&gt;When exposed to scrutiny, that moral argument falls apart.&lt;/li&gt;
    &lt;li&gt;Therefore, if PEers can’t find a different argument, it’s ok for everyone else to get on with their lives.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;“PE is a moral argument and therefore impossible to engage with on a practical level”. You know what that sounds like? That you haven’t got any argument except “I don’t want to do PE”. It’s the same argument that dipshits use to justify not doing accessibility work: “Oh, every time you say you don’t want to do it, they just get angry and you can’t argue”. Of course I get angry. I’ve had enough of this teenage boy selfishness masquerading as adult argument.&lt;/p&gt;

&lt;p&gt;I know that progressive enhancement is harder than just jumping straight in and coding your app in whatever your favourite framework is. But guess what? Being a responsible adult is hard. Caring for others is hard. This fucking world is hard. It’s up to each of us to make it &lt;em&gt;easier&lt;/em&gt; for each other.&lt;/p&gt;

&lt;p&gt;If I ever catch one of your anti-PE, anti-a11y people not doing PE work, but then spending a morning implementing the latest framework in your app, I will personally punch you until your kidneys turn into unicorns.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;But I am an expert at spotting fuzzy rhetoric and teasing out what’s really being said.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No, you’re the kind of shit that enjoys arguing with people, rather than empathising with them. The kind of person who says “well, sometimes racism has a cause” or “men and women just have different brains” and expects people to look thoughtful and engage with you, rather than look disgusted and walking out of the room.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Here is the real progressive enhancement argument: “It’s a moral imperative that everything on the web should be available to everyone everywhere all the time. Failing to achieve — or at least strive for — that goal is inhumane.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Guess what? I FUCKING SUBSCRIBE TO THAT NOTION. Your shitty Soylent app should be usable even by the non-white-manboy-developers of the world (not that they’d fucking want to use it). Are you really saying that you’re incapable of coding a HTML form that submits a delivery address to some server-side code and stores it? REALLY? Because I can fucking well do that and I am &lt;em&gt;definitely&lt;/em&gt; not one of the coding elite.&lt;/p&gt;

&lt;p&gt;No, you’re saying that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a) you don’t want to code it, or;&lt;/li&gt;
  &lt;li&gt;b) you’re not allowed to code it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don’t want to code it then you’re a lazy fuck. Morally lazy. No, you fucking are. If you don’t want to write code that might work for a minority of people in bad situations, then you’re morally corrupt. I’m sick of coddling peoples feelings on this. Just grow a fucking moral spine, you shit.&lt;/p&gt;

&lt;p&gt;If, however, you’re not ALLOWED to code it… well, that’s still a shitty situation, but at least understandable. I’ve been there. I’ve had bosses who would not authorise devs to do PE “unless the client pays for it” (we did it anyway, when we could).&lt;/p&gt;

&lt;p&gt;That’s capitalism for you. If it can fuck over a group of people and still make a profit, it’ll do it.&lt;/p&gt;

&lt;p&gt;If your arguments against PE revolve around not having the time to do it, or not being allowed to do it, then your arguments are not with PE. They’re with a shitty company that values money over people. They’re with capitalism itself, which is either going to die, or eat the world. Stop whining about PE and start arguing against capitalism.&lt;/p&gt;

&lt;h2 id=&quot;its-all-or-nothing-in-my-world&quot;&gt;It’s all or nothing in my world&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Unstated assumptions:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;A clunky experience is always better than no experience.&lt;/li&gt;
    &lt;li&gt;HTML content — i.e. text, images, unstyled forms — is the most important part of most websites.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Really? You want to argue that HTML content is not the most important part of your site? Because what the fuck else is a site but those things? Do you think you can just put up an input field where people can enter their credit card details? That they’ll just fill that in an send it to you? Fuck off. You need content, images, text to justify your app and your shitty business.&lt;/p&gt;

&lt;p&gt;And of course a fucking clunky experience is better than no experience. What are you, the experience police? I don’t see you giving a shit about experience when it comes to the edge cases that you think PE people are whining about.&lt;/p&gt;

&lt;p&gt;I’d rather be able to do something on your site, than nothing at all. I’d rather submit a HTML form and have my data saved than the all-or-nothing experience of my browser failing to load up the latest JS that submits serialised data to a API endpoint, but which didn’t fucking load because my 3G provider is shit.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Everything beyond HTML content is superfluous fanciness.&lt;/li&gt;
    &lt;li&gt;It’s morally problematic if some users cannot access features built with JavaScript.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fuck this shit. I’m just printing the author’s avatar out and using it as a fucking dartboard.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Assemble those unstated assumptions and you get the real PE argument: universal access to everything on the web is a moral imperative.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Shitting piss, you say “morality” like it’s some kind of dirty word.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;That’s a philosophical argument, not a practical approach to web development.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;No, it means you have to get off your lazy fucking arse and do something for people other than yourself and your whitecodebro demographic. You need to give a shit about people in poor connectivity regions, people who are stuck on older browsers that they can’t upgrade, people in orgs with draconian lockdowns.&lt;/p&gt;

&lt;p&gt;I’m not going to quote the rest of this shitty article because you can go read it yourself and make your morality bleed out of your skull.&lt;/p&gt;

&lt;p&gt;No, what I’m going to do is explicitly link this kind of shitty attitude with the rest of the shit that’s been going on in the world the last few months.&lt;/p&gt;

&lt;p&gt;We’ve just seen far-right capitalist white nationalism - fascism by any other word - coming out of closet again. It’s been hiding for 70 years, but it’s back and now it’s got the internet as a delivery method. These kinds of articles are, ultimately, playing into this fascist rhetoric.&lt;/p&gt;

&lt;p&gt;Before you look agog, or pull a face at that statement, just listen to me. The “alt-right” (the fucking fascists) have been among us for years. They were gamergate. They were the internet trolls. They were the fedora-wearing fucks who always felt friend-zoned. They were white guy who felt hurt that he didn’t have to think about anybody but himself. They were the able-bodied people who parked in disabled bays because “they’re just faking it anyway”. They were the people who read the Daily Mail and believe its hate. They were the friends who told racist jokes and then defended it with “not got a sense of humour, love?”&lt;/p&gt;

&lt;p&gt;And now they’re here again, as the people who don’t give a shit about the “difficult people” who might be using their shitty application. They’re the people who say “I’m only talking about javascript here” but mean “why do I have to bother about accessibility?”. They’re the coders who want to JUST SHIP CODE rather than thinking about, or having any empathy for, others. They’re half people, bereft of empathy or kindness. They’re the people running the web.&lt;/p&gt;

&lt;p&gt;These people say “But if you take away the moral argument, why should you care about PE or a11y?”.&lt;/p&gt;

&lt;p&gt;THE MORAL ARGUMENT &lt;em&gt;IS&lt;/em&gt; THE FUCKING ARGUMENT, YOU FEDORA-WEARING SHITBEAN.&lt;/p&gt;

&lt;p&gt;I’m sick of this shit. I’m sick of developers thinking they’re the pinnacle of things. I’m sick of the lack of empathy that’s a core part of our industry. I’m going to fight it. I’m going to be angry about it.&lt;/p&gt;

&lt;p&gt;I ask that you be angry about it too.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Dec 2016 13:00:00 +0100</pubDate>
        <link>http://sonniesedge.co.uk/blog/progressive-enhancement</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/progressive-enhancement</guid>
        
        
      </item>
    
      <item>
        <title>My favourite UX, design and frontend development podcasts</title>
        <description>&lt;p&gt;As I can’t be arsed to read blogs or Twitter that often, podcasts are kinda vital for me. They let me keep up with latest news and trends in the web world, and keep me occupied on my 40 minute bicycle commute to work.&lt;/p&gt;

&lt;h2 id=&quot;the-podcasts&quot;&gt;The podcasts&lt;/h2&gt;

&lt;p&gt;The mix of FED, UX and design podcasts that I listen to each day.&lt;/p&gt;

&lt;h3 id=&quot;shoptalk-show&quot;&gt;Shoptalk Show&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://shoptalkshow.com/&quot;&gt;http://shoptalkshow.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/davatron5000&quot;&gt;Dave Rupert&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/chriscoyier&quot;&gt;Chris Coyier&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m not sure how Dave and Chris manage to churn this show out, but every week a new 1 hour show emerges, and it’s always something to look forward to. Sometimes the shows are centered on special guests and a particular topic, while others are rapid fire shows, where they answer questions on FED tech, process and business sent in by listeners.&lt;/p&gt;

&lt;p&gt;It’s always a pleasure to listen to and &lt;em&gt;always&lt;/em&gt; informative, and it has been wonderful to see Dave and Chris grow and learn about issues of diversity and intersectionality. When you hear a show that used to feature macho machine-gun noises and dude jokes now ask for show donations to be made to &lt;a href=&quot;http://www.blackgirlscode.com/&quot;&gt;Black Girls Code&lt;/a&gt;, you know progress in this industry is possible.&lt;/p&gt;

&lt;h3 id=&quot;toolsday&quot;&gt;Toolsday&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.toolsday.io/&quot;&gt;http://www.toolsday.io/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/Una&quot;&gt;Una Kravets&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/chrisdhanaraj&quot;&gt;Chris Dhanaraj&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You’re greeted at the start of each episode by Una singing about FED. This is, surprisingly, a &lt;em&gt;good&lt;/em&gt; thing. Una and Chris spend each 20 minute show covering topics surrounding the tech and tooling side of FED. So one episode might be ES2015, while another might discuss standards and linters. Definitely a good one for getting up to speed on the (sometimes frustratingly) broad topics that make up FED.&lt;/p&gt;

&lt;h3 id=&quot;ttl&quot;&gt;TTL&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://ttlpodcast.com/&quot;&gt;http://ttlpodcast.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/rmurphey&quot;&gt;Rebecca Murphey&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve just started listening to this, and I’m already hooked. Between 40 minutes and an hour long, this show has Rebecca talking to a guest about their area of expertise and the work that they do. This results in excellent insider secrets and tips being unearthed in every episode.&lt;/p&gt;

&lt;h3 id=&quot;style-guide-podcast&quot;&gt;Style Guide Podcast&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://styleguides.io/podcast&quot;&gt;http://styleguides.io/podcast&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/anna_debenham&quot;&gt;Anna Debenham&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/brad_frost&quot;&gt;Brad Frost&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Style Guide Podcast is pretty heavy, dealing with the process and business angles of building and maintaining company-wide style guides. But set aside an hour to listen to the show and you’ll get some valuable insights into maintaining style guides and pattern libraries at scale.&lt;/p&gt;

&lt;h3 id=&quot;responsive-design-podcast&quot;&gt;Responsive Design Podcast&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://responsivedesign.is/podcast&quot;&gt;http://responsivedesign.is/podcast&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/justinavery&quot;&gt;Justin Avery&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Coming out every 2 - 4 weeks, Justin’s show is an audio extensions of the RWD newsletter, and is a great way of keeping up with trends in the web industry. Each show is highly variable in length and content, but it’s always informative.&lt;/p&gt;

&lt;h3 id=&quot;percent-invisible&quot;&gt;99 Percent Invisible&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://99percentinvisible.org/&quot;&gt;http://99percentinvisible.org/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/romanmars&quot;&gt;Roman Mars&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Not actually tech orientated, but this is podcast delivers delicious 20 minute chunks about the design that we miss in our everyday lives.&lt;/p&gt;

&lt;h3 id=&quot;responsive-web-design&quot;&gt;Responsive Web Design&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://responsivewebdesign.com/podcast/&quot;&gt;http://responsivewebdesign.com/podcast/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/karenmcgrane&quot;&gt;Karen McGrane&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/beep&quot;&gt;Ethan Marcotte&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Karen and Ethan spend around 20 minutes each episode talking to the people who make responsive web designs happen. While some of us might take RWD to be a given now, it is still being rolled our in large organisations and in big corporate redesigns. This show gives some great insights into the people and tech processes behind this.&lt;/p&gt;

&lt;h3 id=&quot;what-is-wrong-with-ux&quot;&gt;What is wrong with UX?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.usersknow.com/podcast/&quot;&gt;https://www.usersknow.com/podcast/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Presented by &lt;a href=&quot;https://twitter.com/lauraklein&quot;&gt;Laura Klein&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/katerutter&quot;&gt;Kate Rutter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These ladies are fucking lovely. They drink, argue and snipe about UX issues, and their drunken conversations meander all over the tech development landscape. A genuine pleasure to listen to. (I want to be like them when I grow up).&lt;/p&gt;

&lt;h2 id=&quot;bicycle-headphone-addendum&quot;&gt;Bicycle headphone addendum&lt;/h2&gt;

&lt;p&gt;While I’d never try to simultaneously ride a bicycle in London and listen to anything on headphones, because you need 100% of your wits about you in a city filled the Daily Mail-reading, hate-filled, HGV drivers &lt;em&gt;literally&lt;/em&gt; trying to kill you, I have no problem doing so in Berlin.&lt;/p&gt;

&lt;p&gt;Berlin is, in every aspect (bar queueing - where it is 100% German), utterly chill. So while I wait at lights, avoid pedestrians in the cycle lanes, and get shaken to death on Berlin’s randomly cobbled streets, I probably have one of these shows playing in a solitary ear.&lt;/p&gt;
</description>
        <pubDate>Sat, 29 Oct 2016 14:50:00 +0200</pubDate>
        <link>http://sonniesedge.co.uk/blog/my-favourite-frontend-development-podcasts</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/my-favourite-frontend-development-podcasts</guid>
        
        
      </item>
    
      <item>
        <title>Auto-publishing via npm version</title>
        <description>&lt;p&gt;So, I’m supposed to be prepping for an interview right now, but I had to write this down before I forget as it is SO FUCKING COOL.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://npmjs.org&quot;&gt;npm&lt;/a&gt; has an amazing feature called &lt;code class=&quot;highlighter-rouge&quot;&gt;npm version&lt;/code&gt;. Using an argument your can change the &lt;a href=&quot;http://semver.org/&quot;&gt;semver&lt;/a&gt; version number in your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file and automatically create a commit for that new version.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm version 1.1.5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Cool, huh?&lt;/p&gt;

&lt;p&gt;Well, it gets cooler…&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm version patch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;…will automatically increment the patch number in your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;, meaning you don’t even have to remember it. Similarly, &lt;code class=&quot;highlighter-rouge&quot;&gt;npm version minor&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;npm version major&lt;/code&gt; will bump the minor and major versions.&lt;/p&gt;

&lt;p&gt;But it gets even cooler. Add the following to your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;postversion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;git push &amp;amp;&amp;amp; git push --tags &amp;amp;&amp;amp; npm publish&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;npm will now, after already incrementing and creating a commit, &lt;em&gt;create a new tag, push the new tag and publish the new version of your package!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So after I’ve made some bugfix commits, all I have to do is type&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm version patch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and I get a whole new published package, a commit in git and a new release tag.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=AX0X-s2wuaU&quot;&gt;Oberaffengeil&lt;/a&gt;!&lt;/p&gt;

&lt;div class=&quot;o-fixed-ratio&quot;&gt;
  &lt;iframe class=&quot;o-fixed-ratio__inner&quot; allowfullscreen=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;788&quot; height=&quot;443&quot; frameborder=&quot;0&quot; src=&quot;https://www.youtube.com/embed/AX0X-s2wuaU?autoplay=0&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 08 Oct 2016 15:30:00 +0200</pubDate>
        <link>http://sonniesedge.co.uk/blog/npm-version</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/npm-version</guid>
        
        
      </item>
    
      <item>
        <title>Setting the scope for Loom</title>
        <description>&lt;p&gt;&lt;em&gt;Writing the core of &lt;a href=&quot;https://github.com/sonniesedge/loom&quot;&gt;Loom&lt;/a&gt; has been extraordinary fun, and I’ll be sharing some of the thought processes and techniques behind it with you.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So what did I want from a new framework?&lt;/p&gt;

&lt;p&gt;I didn’t want make it &lt;em&gt;too&lt;/em&gt; broad. I know I want the user to do anything with it, but you could go too far with that, you know? I mean, the ultimate do-anything-you-want Sass/CSS framework is a bunch of mixins that can be used to write your own code. (Hell, the &lt;em&gt;ultimate&lt;/em&gt; framework is blank text-file). Multi-contributor, sponsored projects like &lt;a href=&quot;https://github.com/thoughtbot/bourbon/&quot;&gt;Bourbon&lt;/a&gt; are already out there and do things 1000x better than a single developer ever could.&lt;/p&gt;

&lt;p&gt;On the other hand, things like &lt;a href=&quot;http://purecss.io/&quot;&gt;Pure&lt;/a&gt; are just too restrictive. You just want me to include a CSS file and use your classes? Nah, mate.&lt;/p&gt;

&lt;p&gt;No, I had to think about what &lt;em&gt;I’d&lt;/em&gt; like to see from a CSS framework, and go from there. That’s the reason most open-source projects get started, no?&lt;/p&gt;

&lt;h1 id=&quot;put-your-thoughts-down-in-writing&quot;&gt;Put your thoughts down in writing&lt;/h1&gt;
&lt;p&gt;I had all these ideas buzzing around my head for Loom, but nothing concrete or any stated goals, so I sat down and came up with the following manifesto points:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It should make things &lt;em&gt;easier&lt;/em&gt; for a developer like me. So, if I were to end up configuring a framework more than using it, it’s pointless. If each time I use it I ended up overriding the classes with my own, it’s not fulfilling it’s job.&lt;/li&gt;
  &lt;li&gt;This isn’t about themes. I’m not aiming to recreate Foundation or Bootstrap here. I want a framework that could be used to &lt;em&gt;produce&lt;/em&gt; a CSS library like Bootstrap.&lt;/li&gt;
  &lt;li&gt;Following from the previous point, this should be aimed at people like me, professional frontenders. This isn’t something to be be picked up and dropped into a project to make it look pretty. This is something to help professional designer/developers in their everyday tasks.&lt;/li&gt;
  &lt;li&gt;I love design systems, and I want something that ties in with that. I want to be able to write code that lends itself to pattern libraries and styleguides. You know, that whole idea of producing &lt;a href=&quot;http://daverupert.com/2013/04/responsive-deliverables/&quot;&gt;a mini-Bootstrap for each client&lt;/a&gt;, as Dave Rupert talks about. So this framework needs some way of easily accessing design system settings, such as spacings, colour palettes, typography, etc.&lt;/li&gt;
  &lt;li&gt;I wanted to be write CSS in the way that I want to write it. This doesn’t just mean naming conventions, but the way that CSS classes are used. Which end of the Atomic vs Component spectrum do I want to swing to? Do I have to make that choice?&lt;/li&gt;
  &lt;li&gt;Modularity. The problem with many CSS libraries is that they get imported all in one go and don’t offer any selectivity. You end up having to overwrite their CSS classes with your own.&lt;/li&gt;
  &lt;li&gt;Enforce some best practice with regard to specificity. One of the few things I really don’t like to see in CSS is overly-nested selectors and the emergence of specificity wars - it’s the bane of most projects I’ve come into. Whatever system I came up with should help avoid that.&lt;/li&gt;
  &lt;li&gt;Recognise that most developers don’t stick rigidly to any particular methodology. Most people end up with a hybrid of many approaches, something that works for them. Any framework should have flexibility for that.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;thinking-technically&quot;&gt;Thinking technically&lt;/h1&gt;
&lt;p&gt;After looking at these manifesto points it became so much easier to decide on the technical architecture of things.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I didn’t want to offer something themed. There’s a multitude of &lt;strike&gt;Wordpress themes&lt;/strike&gt; pattern libraries already out there that do that. I wanted a loose collection of objects and utilities to help others build a pattern library.&lt;/li&gt;
  &lt;li&gt;I definitely wanted to use ITCSS, right from the start. It allows enormous flexibility for structuring code while avoiding specificity wars. It’s not documented very well, but I could address that in the framework documentation.&lt;/li&gt;
  &lt;li&gt;I wanted to let the consumer decide if they want to output chunky components or lighter utility classes. I can’t say I prefer using utility classes, but I can utterly see the value.&lt;/li&gt;
  &lt;li&gt;I wanted to use BEM of for naming. But I was still unsure at this initial point about if I wanted to force this on end users.&lt;/li&gt;
  &lt;li&gt;I wanted to make sure everything would be modular. I think this came naturally from wanting to use ITCSS - it’s designed to allow the insertion or modification of modules and layers, and is what drew me to it initially.&lt;/li&gt;
  &lt;li&gt;I wanted it to be documented. There’s nothing more frustrating than a framework that you don’t have full information for. I’d always wanted to use SassDocs so I went for that.&lt;/li&gt;
  &lt;li&gt;Because of my design system love, I wanted to get that incorporated from the start. That meant everything should be standardised into Sass variables where possible.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;so-what-next&quot;&gt;So what next?&lt;/h1&gt;

&lt;p&gt;That set the scope for what I wanted to achieve, but comes after that? Check back soon for the next part, “Organizing the Code”.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Oct 2016 15:30:00 +0200</pubDate>
        <link>http://sonniesedge.co.uk/blog/loom-setting-the-scope</link>
        <guid isPermaLink="true">http://sonniesedge.co.uk/blog/loom-setting-the-scope</guid>
        
        
      </item>
    
  </channel>
</rss>
